{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gauta\\\\Desktop\\\\whats-app-clone\\\\chat-app\\\\src\\\\components\\\\chat\\\\ChatDialog.js\",\n  _s = $RefreshSig$();\nimport { Box, Dialog, Drawer } from '@mui/material';\nimport React, { useState } from 'react';\nimport { Menu } from './menu/Menu';\nimport { EmptyChat } from './chat/EmptyChat';\nimport styled from '@emotion/styled';\nimport { ChatBox } from './chat/ChatBox';\nimport { useContext } from 'react';\nimport { AccountContext } from '../account/context/AccountProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dialogStyle = {\n  height: '95%',\n  width: '100%',\n  margin: '20px',\n  borderRadius: '0',\n  // minwidth: '600px',\n  maxWidth: '1500px',\n  maxHeight: '100%',\n  overflow: 'hidden'\n};\nconst Component = styled(Box)`\n    display:flex`;\n_c = Component;\nconst LeftComponent = styled(Box)`\n    min-width: 320px;\n    width: 38%;\n    `;\n_c2 = LeftComponent;\nconst RightComponent = styled(Box)`\n    width: 75%;\n    min-width: 300px;\n    overflow:hidden;\n    height:100%;\n    border-left: 1px solid black;\n    `;\n_c3 = RightComponent;\nexport const ChatDialog = () => {\n  _s();\n  const {\n    person\n  } = useContext(AccountContext);\n  const [openChatsDrawer, setOpenChatsDrawer] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    PaperProps: {\n      sx: dialogStyle\n    },\n    hideBackdrop: true,\n    maxWidth: 'md',\n    children: /*#__PURE__*/_jsxDEV(Component, {\n      children: [/*#__PURE__*/_jsxDEV(LeftComponent, {\n        children: /*#__PURE__*/_jsxDEV(Drawer, {\n          open: openChatsDrawer,\n          onClose: () => {\n            setOpenChatsDrawer(false);\n          },\n          style: {\n            zIndex: 1500\n          },\n          children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RightComponent, {\n        children: Object.keys(person).length ? /*#__PURE__*/_jsxDEV(ChatBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(EmptyChat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatDialog, \"ykrvQYb0VmM+unI/Svf59pvgSjg=\");\n_c4 = ChatDialog;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Component\");\n$RefreshReg$(_c2, \"LeftComponent\");\n$RefreshReg$(_c3, \"RightComponent\");\n$RefreshReg$(_c4, \"ChatDialog\");","map":{"version":3,"names":["Box","Dialog","Drawer","React","useState","Menu","EmptyChat","styled","ChatBox","useContext","AccountContext","jsxDEV","_jsxDEV","dialogStyle","height","width","margin","borderRadius","maxWidth","maxHeight","overflow","Component","_c","LeftComponent","_c2","RightComponent","_c3","ChatDialog","_s","person","openChatsDrawer","setOpenChatsDrawer","open","PaperProps","sx","hideBackdrop","children","onClose","style","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","_c4","$RefreshReg$"],"sources":["C:/Users/gauta/Desktop/whats-app-clone/chat-app/src/components/chat/ChatDialog.js"],"sourcesContent":["import { Box, Dialog, Drawer } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport { Menu } from './menu/Menu'\r\nimport { EmptyChat } from './chat/EmptyChat'\r\nimport styled from '@emotion/styled'\r\nimport { ChatBox } from './chat/ChatBox'\r\nimport { useContext } from 'react'\r\nimport { AccountContext } from '../account/context/AccountProvider'\r\n\r\nconst dialogStyle = {\r\n        height: '95%',\r\n        width: '100%',\r\n        margin: '20px',\r\n        borderRadius: '0',\r\n        // minwidth: '600px',\r\n        maxWidth: '1500px',\r\n        maxHeight: '100%',\r\n        overflow: 'hidden'\r\n    }\r\n\r\n    const Component = styled(Box)`\r\n    display:flex`\r\n\r\n    const LeftComponent = styled(Box)`\r\n    min-width: 320px;\r\n    width: 38%;\r\n    `\r\n\r\n    const RightComponent = styled(Box)`\r\n    width: 75%;\r\n    min-width: 300px;\r\n    overflow:hidden;\r\n    height:100%;\r\n    border-left: 1px solid black;\r\n    `\r\n\r\nexport const ChatDialog = () => {\r\n\r\n    const {person} = useContext(AccountContext);\r\n    const [openChatsDrawer, setOpenChatsDrawer] = useState(false);\r\n\r\n  return (\r\n    <Dialog\r\n        open={true}\r\n        PaperProps={{sx: dialogStyle}}\r\n        hideBackdrop={true}\r\n        maxWidth={'md'}\r\n    >\r\n        <Component>\r\n            <LeftComponent>\r\n                <Drawer \r\n                    open={openChatsDrawer}\r\n                    onClose={()=>{setOpenChatsDrawer(false)}}\r\n                    style={{\r\n                        zIndex:1500\r\n                    }}\r\n                    >\r\n                    <Menu/>\r\n                </Drawer>\r\n            </LeftComponent>\r\n            <RightComponent>\r\n                {Object.keys(person).length ? (\r\n                    <ChatBox/>\r\n                    ) : ( \r\n                    <EmptyChat/>\r\n                )}\r\n            </RightComponent>\r\n        </Component>\r\n\r\n    </Dialog>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}